router id 10.130.14.1;

define OWNAS = 65052;
define OWNIP = 10.130.14.1;
define OWNIP_PUBLIC = 185.66.193.32;
define KERNEL_TABLE = ipt_freifunk;

function is_self_net() {
	return net ~ [10.130.0.0/16+];
}

function is_self_mesh() {
	return net ~ [10.130.0.0/20+];
}

function is_self_clientvpn() {
	return net ~ [10.130.16.0/24+];
}

protocol static static_mesh {
	table peering;
	route 10.130.0.0/16 reject;
};

protocol static local_mesh {
	route 10.130.0.0/20 via "freifunk-hl";
};

protocol static local_ip4 {
	table peering_ffrhein;
	route 185.66.193.32/32 reject;
};

# Mesh-internal routing
########################

protocol rip rip_mesh {
	interface "freifunk";
	preference 10;
	import where is_self_net();
	export where !is_default() && !((OWNAS, 1) ~ bgp_community);
};

# Freifunk-Client-VPN
######################

protocol static local_clientvpn {
	route 10.130.16.0/24 via "freifunk-client";
};

protocol ospf OSPF {
	rfc1583compat yes;
#	import none;
	import where is_self_net() && !is_self_mesh() && !is_self_clientvpn();
	export where !is_default();

	area 10.130.16.0 {
		interface "freifunk-client" {
			type broadcast;
		};
	};
};

# DN42 peerings
################

template bgp bgp_dn42 {
	table peering;
	local as OWNAS;
	import where is_dn42() || is_chaosvpn();
	export all;
};

include "bird_dn42.conf";
